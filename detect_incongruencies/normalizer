#!/usr/bin/env python

import os
import sys
import gzip
import click
import logging
from incongruency_detector.Detector import Detector
from incongruency_detector.Normalizer import Normalizer


<<<<<<< HEAD
=======
#@click.option('--normalize', is_flag=True,
#             help='''Normalizes provided files.

#Incongruencies in FASTA will be corrected if the provided genome name
#passes checks.
    
#The gff file will be tidied if it fails gff3 validation in gt:

#    gt gff3 -sort -tidy -retainids input.gff3 > out.gff3

#''')

def cli():
    '''Normalizer -- Normalize Files to LEGFED Data Store Standard.

           The normalizer will detect the input file type.

           Currently recognizes case independent fasta, fna, fa, gff3, gff

       USAGE: normalizer <mode> [options]

       Current Modes:

           sort
           index
           prefix
           generate_readme
           generate_checksums

       Please run `normalizer <TOOL> --help` for individual usage
    '''
    if not len(sys.argv) > 1:
        print(cli.__doc__)
        sys.exit(1)
    mode = sys.argv[1].lower()  # get mode
    sys.argv = [mode] + sys.argv[2:]  # makes usage for applicaiton correct
    if mode == '--help' or mode =='-h':
        print(cli.__doc__)
        sys.exit(1)
#    if mode == 'index':
#        from .modes import sort_and_index
#        sort_and_index.main()


#@click.option('--normalize', is_flag=True,
#             help='''Normalizes provided files.

#Incongruencies in FASTA will be corrected if the provided genome name
#passes checks.
    
#The gff file will be tidied if it fails gff3 validation in gt:

#    gt gff3 -sort -tidy -retainids input.gff3 > out.gff3

#''')
if __name__ == '__main__':
    cli()
